<?xml version="1.0" encoding="Windows-1252"?>
<SimBase.Document Type="CheckpointLibrary" version="1,0">
	<Checklist.CheckpointLibrary>

    <Checkpoint Id="LIGHTS_AS_REQUIRED_KING_AIR">
      <Clue name="TT:CLUE.LIGHTS_AS_REQUIRED"/>
      <CheckpointDesc SubjectTT="TT:GAME.CHECKLIST_LIGHTS" ExpectationTT="TT:GAME.CHECKLIST_AS_REQUIRED"/>
      <Sequence SeqType="Ordered">
        <Test>
          <TestValue>
            <Operator OpType="AND">
              <Val SimVarName="LIGHT STROBE" Units="Boolean"/>
              <Val SimVarName="LIGHT STROBE ON" Units="Boolean"/>
            </Operator>
          </TestValue>
          <Instrument Id="LIGHTING_Switch_Light_Strobe"/>
          <Action Copilot="True" Condition="TestValueFalse" Once="true" EventID="STROBES_TOGGLE"/>
        </Test>
        <Test>
          <TestValue>
            <Val SimVarName="LIGHT NAV" Units="Boolean"/>
          </TestValue>
          <Action Copilot="True" Condition="TestValueFalse" Once="true" EventID="TOGGLE_NAV_LIGHTS"/>
          <Instrument Id="LIGHTING_Switch_Light_Navigation"/>
        </Test>
        <Test>
          <TestValue>
            <Val SimVarName="LIGHT LOGO" Units="Boolean"/>
          </TestValue>
          <Action Copilot="True" Condition="TestValueFalse" Once="true" EventID="TOGGLE_LOGO_LIGHTS"/>
          <Instrument Id="OVHD_PUSH_LIGHTS_LOGO"/>
        </Test>
        <Sequence SeqType="Unordered">
          <Test>
            <!-- here we sum booleans : 2 means Day and light off; 1 means day XOR light off; 0 means not day and light on. We then return 1 if sum is different from 1-->
            <TestValue>
              <Val Code="(E:TIME OF DAY, enum) 1 == (A:LIGHT TAXI ON, Bool) (A:LIGHT TAXI, Bool) + 2 &lt; + 1 !="/>
            </TestValue>
            <Instrument Id="LIGHTING_Switch_Light_Taxi"/>
            <Action Copilot="True" Condition="TestValueFalse" Once="true" EventID="TOGGLE_TAXI_LIGHTS"/>
          </Test>
          <Test>
            <TestValue>
              <Val Code="(E:TIME OF DAY, enum) 1 == (A:LIGHT LANDING ON, Bool) (A:LIGHT LANDING, Bool) + 2 &lt; + 1 !="/>
            </TestValue>
            <Instrument Id="LIGHTING_Switch_Light_Landing"/>
            <Action Copilot="True" Condition="TestValueFalse" Once="true" EventID="LANDING_LIGHTS_TOGGLE"/>
          </Test>
        </Sequence>
      </Sequence>
    </Checkpoint>






    
    
    
    
    
    
    
    
	</Checklist.CheckpointLibrary>
</SimBase.Document>